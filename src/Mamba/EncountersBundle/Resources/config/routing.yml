# Страницы

# Точка входа в приложение
welcome:
    pattern: /
    defaults: { _controller: EncountersBundle:Welcome:index }
#    requirements:
#        _method:  GET

# Страница настроек приложения
preferences:
    pattern: /preferences
    defaults: { _controller: EncountersBundle:Preferences:index }

# Страница поиска
search:
    pattern: /search
    defaults: { _controller: EncountersBundle:Search:index }
    requirements:
        _method: GET

# Страница взаимных симпатий
mutual:
    pattern: /mutual
    defaults: { _controller: EncountersBundle:Mutual:index, page: 1 }
    requirements:
        _method: GET

# Страница моего хитлиста
visitors:
    pattern: /visitors
    defaults: { _controller: EncountersBundle:Visitors:index, page: 1 }
    requirements:
        _method: GET

# Страница мной просмотренных
mychoice:
    pattern: /mychoice
    defaults: { _controller: EncountersBundle:MyChoice:index, page: 1 }
    requirements:
        _method: GET

# Страница постоплаты
billing:
    pattern: /billing
    defaults: { _controller: EncountersBundle:Billing:index }
    requirements:
        _method: GET

# Отправка ответа
decision.set:
    pattern: /ajax/decision.set
    defaults: { _controller: EncountersBundle:Decision:setDecision }
    requirements:
        _method: POST

message.send:
    pattern: /ajax/message.send
    defaults: { _controller: EncountersBundle:Decision:sendMessage }
    requirements:
        user_id: \d+
        _method: POST

multi.gift:
    pattern: /ajax/multi.gift
    defaults: { _controller: EncountersBundle:Decision:multiGift }
    requirements:
        _method: POST

# Получение ответа
decision.get:
    pattern: /ajax/decision.get
    defaults: { _controller: EncountersBundle:Decision:getDecision }
    requirements:
        _method: POST

# Удаление ответа
decision.remove:
    pattern: /ajax/decision.remove
    defaults: { _controller: EncountersBundle:Decision:removeDecision }
    requirements:
        _method: POST

# Получение текущей очереди
queue.get:
    pattern: /ajax/queue.get
    defaults: { _controller: EncountersBundle:Queue:getQueue }
    requirements:
        _method: POST

# Отправка ответа
variable.set:
    pattern: /ajax/variable.set
    defaults: { _controller: EncountersBundle:Variables:setVariable }
    requirements:
        _method: POST

# Добавление заказа
service.add:
    pattern: /ajax/service.add
    defaults: { _controller: EncountersBundle:Billing:addService }
    requirements:
        _method: POST

# Billing
billing.gateway:
    pattern: /gateway/billing
    defaults: { _controller: EncountersBundle:Billing:gateway }
    requirements:
        _method: POST

# Admin
admin:
    pattern: /admin/
    defaults: { _controller: EncountersBundle:Admin:index }
    requirements:
        _method: GET

admin.users:
    pattern: /admin/application/users/{user_id}
    defaults: { _controller: EncountersBundle:AdminUsers:index, user_id: 0 }
    requirements:
        user_id: \d+
        _method: GET|POST

admin.finances:
    pattern: /admin/application/finances/{limit}
    defaults: { _controller: EncountersBundle:AdminFinances:index, limit: 10 }
    requirements:
        limit: \d+
        _method: GET

admin.decisions:
    pattern: /admin/application/decisions/{limit}
    defaults: { _controller: EncountersBundle:AdminDecisions:index, limit: 10 }
    requirements:
        limit: \d+
        _method: GET

admin.events:
    pattern: /admin/application/events/{limit}
    defaults: { _controller: EncountersBundle:AdminEvents:index, limit: 10 }
    requirements:
        limit: \d+
        _method: GET

admin.redis:
    pattern: /admin/services/redis
    defaults: { _controller: EncountersBundle:AdminRedis:index }
    requirements:
        _method: GET

admin.memcache:
    pattern: /admin/services/memcache
    defaults: { _controller: EncountersBundle:AdminMemcache:index }
    requirements:
        _method: GET

admin.gearman:
    pattern: /admin/services/gearman
    defaults: { _controller: EncountersBundle:AdminGearman:index }
    requirements:
        _method: GET

admin.nginx:
    pattern: /admin/services/nginx
    defaults: { _controller: EncountersBundle:AdminNginx:index }
    requirements:
        _method: GET

admin.fpm:
    pattern: /admin/services/php-fpm
    defaults: { _controller: EncountersBundle:AdminPhpFpm:index }
    requirements:
        _method: GET


admin.platform:
    pattern: /admin/monitoring/platform
    defaults: { _controller: EncountersBundle:AdminPlatform:index }
    requirements:
        _method: GET

admin.cron:
    pattern: /admin/monitoring/cron
    defaults: { _controller: EncountersBundle:AdminCron:index }
    requirements:
        _method: GET